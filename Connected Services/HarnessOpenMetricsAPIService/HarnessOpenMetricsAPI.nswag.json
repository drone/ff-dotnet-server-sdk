{
  "openapi": "3.0.0",
  "info": {
    "title": "Harness feature flag analytics service",
    "contact": {
      "name": "Feature Flag - developers",
      "url": "https://www.harness.io",
      "email": "cf@harness.io"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api/1.0",
      "description": "no host specified"
    },
    {
      "url": "http://localhost:3000/api/1.0",
      "description": "CfClient description"
    }
  ],
  "paths": {
    "/metrics/{environmentUUID}": {
      "post": {
        "summary": "Send metrics to the Analytics server.",
        "description": "Send metrics to Analytics server",
        "operationId": "postMetrics",
        "parameters": [
          {
            "$ref": "#/components/parameters/environmentPathParam/schema"
          },
          {
            "$ref": "#/components/parameters/clusterQueryOptionalParam/schema"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Metrics"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated",
            "description": ""
          },
          "403": {
            "$ref": "#/components/responses/Unauthorized",
            "description": ""
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError",
            "description": ""
          }
        },
        "security": [
          {
            "ApiKeyAuth": []
          },
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "KeyValue": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "TargetData": {
        "type": "object",
        "required": [
          "name",
          "identifier",
          "attributes"
        ],
        "properties": {
          "identifier": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          }
        }
      },
      "MetricsData": {
        "type": "object",
        "required": [
          "attributes",
          "count",
          "timestamp",
          "metricsType"
        ],
        "properties": {
          "timestamp": {
            "type": "integer",
            "description": "time at when this data was recorded",
            "format": "int64",
            "example": "1608175465"
          },
          "count": {
            "type": "integer"
          },
          "metricsType": {
            "type": "string",
            "description": "This can be of type FeatureMetrics",
            "enum": [
              "FFMETRICS"
            ]
          },
          "attributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValue"
            }
          }
        }
      },
      "Metrics": {
        "type": "object",
        "properties": {
          "targetData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TargetData"
            }
          },
          "metricsData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MetricsData"
            }
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "code",
          "message"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "The http error code",
            "example": "404"
          },
          "message": {
            "type": "string",
            "description": "The reason the request failed",
            "example": "Error retrieving projects, organization 'default_org' does not exist"
          },
          "details": {
            "type": "object",
            "description": "Additional details about the error"
          }
        }
      }
    },
    "responses": {
      "Unauthenticated": {
        "description": "Unauthenticated",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "parameters": {
      "clusterQueryOptionalParam": {
        "name": "cluster",
        "in": "query",
        "description": "Unique identifier for the cluster for the account",
        "schema": {
          "type": "string"
        }
      },
      "environmentPathParam": {
        "name": "environmentUUID",
        "in": "path",
        "required": true,
        "description": "environment parameter in query.",
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "name": "api-key",
        "in": "header"
      },
      "BearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}