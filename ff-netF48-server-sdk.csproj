<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <!-- The SDK must be built with .NET 7 however we must also keep compatibility with .NET 5/6 hence SupportedOSPlatformVersion=9 below -->
        <TargetFrameworks>netstandard2.0;net461;net5.0;net6.0;net7.0</TargetFrameworks>
        <SupportedOSPlatformVersion>9.0</SupportedOSPlatformVersion>
        <LangVersion>9.0</LangVersion>
        <PackageId>ff-dotnet-server-sdk</PackageId>
        <RootNamespace>io.harness.cfsdk</RootNamespace>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <Version>1.4.1</Version>
        <PackOnBuild>true</PackOnBuild>
        <PackageVersion>1.4.1</PackageVersion>
        <AssemblyVersion>1.4.1</AssemblyVersion>
        <Authors>support@harness.io</Authors>
        <Copyright>Copyright © 2023</Copyright>
        <PackageIconUrl>https://harness.io/icon-ff.svg</PackageIconUrl>
        <PackageLicenseUrl>https://github.com/drone/ff-dotnet-server-sdk/blob/main/LICENSE</PackageLicenseUrl>
        <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
        <PackageProjectUrl>https://github.com/drone/ff-dotnet-server-sdk</PackageProjectUrl>
        <Summary>.NET Server SDK for Harness Feature Flag platform</Summary>
        <PackageTags>featureflag harness</PackageTags>
        <Title>Harness CF .NET Server SDK</Title>
        <Description>Harness Feature Flags (FF) is a feature management solution that enables users to change the software’s functionality, without deploying new code. FF uses feature flags to hide code or behaviours without having to ship new versions of the software. A feature flag is like a powerful if statement.</Description>
        <PackageReleaseNotes>.NET Server SDK for Harness Feature Flag platform</PackageReleaseNotes>
        <GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
        <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
    </PropertyGroup>

    <ItemGroup>
        <Compile Remove="tests\**;examples\**" />
        <EmbeddedResource Remove="tests\**;examples\**" />
        <None Remove="tests\**;examples\**" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Disruptor" Version="4.0.0" />
        <PackageReference Include="murmurhash" Version="1.0.3" />
        <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
        <PackageReference Include="System.ComponentModel.Annotations" Version="5.0.0" />
        <PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="7.3.0" />
        <PackageReference Include="System.Net.Http" Version="4.3.4" />
        <PackageReference Include="NSwag.ApiDescription.Client" Version="13.0.5">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.ApiDescription.Client" Version="3.0.0">
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="6.0.0" />
        <PackageReference Include="Microsoft.Extensions.Logging.Console" Version="6.0.0" />
    </ItemGroup>

    <ItemGroup>
        <WCFMetadata Include="Connected Services" />
    </ItemGroup>
    
    <ItemGroup>
        <None Remove="NSwag.ApiDescription.Client" />
        <None Remove="Microsoft.Extensions.ApiDescription.Client" />
        <None Remove="Connected Services\HarnessOpenAPIService\HarnessOpenAPIS.nswag" />
    </ItemGroup>
    <ItemGroup>
        <OpenApiReference Include="Connected Services\HarnessOpenAPIService\HarnessOpenAPIS.nswag">
            <Link>OpenAPIs\HarnessOpenAPIS.nswag</Link>
        </OpenApiReference>
    </ItemGroup>

    <Target Name="PostClean" AfterTargets="Clean">
        <RemoveDir Directories="$(BaseIntermediateOutputPath)" ContinueOnError="true" /><!-- obj -->
        <RemoveDir Directories="$(BaseOutputPath)" ContinueOnError="true" /><!-- bin -->
    </Target>

</Project>
